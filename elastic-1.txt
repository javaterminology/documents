Dynamic Field Mapping for JSON Data
>> if we are not setting numeric-detection = true then elastic search will defined long types as strings.
so to show correct data type we have to enable numeric-detection for mappings of an index.
ex:
CURL -XPUT 'localhost:9200/my_index?pretty' -H 'Content-Type: application/json' -d
{
    "mappings":{
		"my_type":{
			"numeric_detection": true
		}
	}
}
>>adding date field to mapping
CURL -XPUT 'localhost:9200/my_index/my_type/1/?pretty' -H 'Content-Type: application/json' -d
{
 "count":"30"
}
>> check data type as below
CURL -XGET 'localhost:9200/my_index/my_type/_mapping?pretty'

{
  "my_index" : {
    "mappings" : {
      "my_type" : {
        "numeric_detection" : true,
        "properties" : {
          "count" : {
            "type" : "long"
          }
        }
      }
    }
  }
}


-------DATE---------
>> if we are not giving elastic standard date format then elastic will consider date as string.(standard - yyyy/MM/dd)
CURL -XPUT 'localhost:9200/my_index1?pretty' -H 'Content-Type: application/json' -d
{
"mappings"{
"my_date_type":{
	"date-detection":true 
}
}
}
>>adding date field to mapping
CURL -XPUT 'localhost:9200/my_index1/my_date_type/1/?pretty' -H 'Content-Type: application/json' -d
{
 "create_date":"2018/08/08"
}

set up Explicit Mappings for an index:

update the "settings" of an index:

"dynamic":"strict" - new fields not accepted,exception is thrown
"dynamic":"true" - new fields are accepted and indexed(default)
"dynamic":"false" - new fields are accepted but ignored and not indexed.
custom_books.json
{
	"settings":{
		"number_of_shards":	1
		"number_of_replicas": 0 - since i m running in my local a single node cluster .
	}
	"dynamic":"strict",
	"mappings":{
	  "my_mapping":{
		"_source":{
			"enabled":false
		}
		"properties":{
			"name":{"type":"text"},
			"author":{"type":"text"},
			"cost":{"type":"float"},
			"available":{"type":"boolean"},
			"pages":{"type":"integer"},
			"date":{"type":"date"}
		}
	  }
	}
}

>> now create a books index with using explicit customized mapping (custom_books.json) 
>> CURL -XPUT 'localhost:9200/books/?pretty' -d @custom_books.json -H 'Content-Type: application/json'
>>now query the mappings of that specific index
>> CURL -XGET 'localhost:9200/books/_mapping?&pretty
>>in elastic documents will be saved to disc space by default..u can restrict saving documents to disc space using below properties inside mappings.
		"_source":{
			"enabled":false
		}
		
>>concatenates contents of all fields into one big string using space as delimiter - disabled in V6 by default.
and also enables searching within all fields in a document without knowing which field holds the information
			"_all":{
				"enabled": false
			}
			
example:
movies.json:

{
	"settings":{
		"number_of_shards":	1
		"number_of_replicas": 0 - since i m running in my local a single node cluster .
	}
	"dynamic":"strict",
	"mappings":{
	  "my_mapping":{
		"_source":{
			"enabled":false
		}
		"_all":{
				"enabled": false
		}
		"properties":{
			"title":{"type":"text"},
			"director":{"type":"text"},
			"actors":{"type":"object"},
			"released":{
			"type":"date"
			"format":"YYYY-MM-DD"
			}
		}
	  }
	}
}		
>> now create a movies index with using explicit customized mapping json(custom_movies.json) 
>> CURL -XPUT 'localhost:9200/movies/?pretty' -d @custom_movies.json -H 'Content-Type: application/json'
>>now query the mappings of that specific index
>> CURL -XGET 'localhost:9200/movies/_mapping?&pretty	